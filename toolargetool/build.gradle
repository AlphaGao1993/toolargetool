apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFile "proguard-rules.pro"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}

android.libraryVariants.all { variant ->
    task("assemble${variant.name.capitalize()}Sources", type: Jar) {
        classifier = 'sources'
        variant.javaCompile.source
    }
    project.artifacts.add("archives", tasks["assemble${variant.name.capitalize()}Sources"])
}

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc, dependsOn: "assemble${variant.name.capitalize()}") {
        source = variant.javaCompile.source
        title = 'TooLargeTool'

        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference","${android.sdkDirectory}/docs/reference"
        }

        classpath += files(variant.javaCompile.classpath.files)
        classpath += files(project.android.getBootClasspath())

        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

android.libraryVariants.all { variant ->
    task("assemble${variant.name.capitalize()}Javadoc", type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc") {
        classifier = 'javadoc'
        from tasks["generate${variant.name.capitalize()}Javadoc"].destinationDir
    }
    project.artifacts.add("archives", tasks["assemble${variant.name.capitalize()}Javadoc"])
}

group = 'com.gu.android'
version = '0.1.3'

install {
    repositories.mavenInstaller {
        pom.project {
            name 'toolargetool'
            description 'A tool for debugging TransactionTooLargeException on Android'
            url 'https://github.com/guardian/toolargetool'
            inceptionYear '2017'

            packaging 'aar'
            groupId 'com.gu.android'
            artifactId 'toolargetool'
            version '0.1.3'

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'https://opensource.org/licenses/MIT'
                }
            }
            scm {
                connection 'https://github.com/guardian/toolargetool.git'
                url 'https://github.com/guardian/toolargetool'

            }
            developers {
                developer {
                    id = 'maxspencer'
                    name 'Max Spencer'
                }
            }
        }
    }
}

Properties bintrayProperties = new Properties()
try {
    bintrayProperties.load(project.file('bintray.properties').newDataInputStream())
} catch (FileNotFoundException ignored) {}

bintray {
    user = bintrayProperties.getProperty('user')
    key = bintrayProperties.getProperty('key')
    configurations = ['archives']
    pkg {
        repo = 'android'
        name = 'toolargetool'
        userOrg = 'guardian'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/guardian/toolargetool.git'
        publish = true
        version {
            name = '0.1.3'
            desc = 'toolargetool version 0.1.3'
            released = new Date()
            vcsTag = 'v0.1.3'
        }
    }
}
